# üöÄ EasyCashFlows - Configurazione Automatica
# Copia questo file come .env e modifica i valori necessari

# ====================================
# üî¥ CONFIGURAZIONE OBBLIGATORIA
# ====================================

# Database PostgreSQL (OBBLIGATORIO)
# Configurato per test con database locale Docker
DATABASE_URL=postgresql://easycashflows:changeme123@postgres:5432/easycashflows

# ====================================
# üü° CONFIGURAZIONE OPZIONALE
# ====================================

# Email Service (SendGrid) - Per invio email automatiche
# Registrati su https://sendgrid.com per ottenere la chiave
SENDGRID_API_KEY=SG.your-sendgrid-api-key-here

# SMS/WhatsApp Service (Twilio) - Per notifiche mobile
# Registrati su https://twilio.com per ottenere le credenziali
TWILIO_ACCOUNT_SID=AC.your-twilio-account-sid-here
TWILIO_AUTH_TOKEN=your-twilio-auth-token-here

# ====================================
# ‚öôÔ∏è CONFIGURAZIONE SISTEMA
# ====================================

# Ambiente di esecuzione
NODE_ENV=production

# Porta dell'applicazione (default: 5000)
PORT=5000
HOST_PORT=5000

# Deployment automatico database
AUTO_MIGRATE=true

# Skip dati demo (false = include dati di esempio)
SKIP_DEMO=false

# ====================================
# üóÑÔ∏è DATABASE LOCALE (OPZIONALE)
# ====================================
# Se NON usi Neon, puoi usare PostgreSQL locale
# Decommentare per usare il database Docker incluso

# POSTGRES_DB=easycashflows
# POSTGRES_USER=easycashflows
# POSTGRES_PASSWORD=your-secure-password-here
# POSTGRES_PORT=5432

# ====================================
# üîê SICUREZZA (AUTO-GENERATO)
# ====================================
# Questi valori sono auto-generati se non specificati
# SESSION_SECRET=your-secret-key-here

# ====================================
# üìñ GUIDA RAPIDA
# ====================================
#
# 1. SETUP VELOCE (solo database Neon):
#    - Vai su https://neon.tech
#    - Crea database gratuito
#    - Copia connection string in DATABASE_URL
#    - Lancia: docker compose -f docker-compose.auto.yml up -d
#
# 2. SETUP COMPLETO (con database locale):
#    - Configura POSTGRES_* sopra
#    - Lancia: docker compose -f docker-compose.auto.yml --profile local-db up -d
#
# 3. SETUP CON PROXY (per dominio personalizzato):
#    - Configura nginx.conf
#    - Lancia: docker compose -f docker-compose.auto.yml --profile proxy up -d
#
# 4. ACCESSO:
#    - URL: http://localhost:5000
#    - Login: admin / admin123
#
# 5. DOCUMENTAZIONE:
#    - Leggi i file DOCUMENTAZIONE_*.md per guide complete
#
# ====================================

# üÜò SUPPORTO:
# Per aiuto: contatta il supporto o leggi la documentazione inclusa