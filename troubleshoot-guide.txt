# Guida Risoluzione Problemi Server

## PROBLEMA: Server in errore su produzione

### STEP 1: Verifica immediata
```bash
cd /var/www/cashflows
pm2 status
pm2 logs cashflows --lines 20
```

### STEP 2: Se server Ã¨ crashed
```bash
pm2 stop cashflows
pm2 delete cashflows
pm2 kill
```

### STEP 3: Test avvio manuale
```bash
export DATABASE_URL="postgresql://easycashflows_user:EasyFlows2025!@localhost:5432/easycashflows"
tsx server/index.ts
```

### STEP 4: Errori comuni e soluzioni

**ERRORE: "Could not find build directory"**
```bash
mkdir -p server/public
echo "<h1>EasyCashFlows</h1>" > server/public/index.html
```

**ERRORE: "DATABASE_URL must be set"**
```bash
echo 'DATABASE_URL="postgresql://easycashflows_user:EasyFlows2025!@localhost:5432/easycashflows"' > .env
```

**ERRORE: "permission denied for schema public"**
```bash
sudo -u postgres psql easycashflows -c "GRANT ALL ON SCHEMA public TO easycashflows_user;"
```

**ERRORE: "drizzle-kit not found"**
```bash
npm install -g drizzle-kit tsx
```

### STEP 5: Server di emergenza (garantito funzionante)
```bash
cat > emergency-server.js << 'EOF'
const express = require('express');
const app = express();

app.get('/', (req, res) => {
    res.send('<h1>EasyCashFlows Online</h1><p>Server funzionante</p>');
});

app.listen(5000, '0.0.0.0', () => {
    console.log('Server online su porta 5000');
});
EOF

pm2 start emergency-server.js --name cashflows
```

### STEP 6: Test finale
```bash
pm2 status
curl http://localhost:5000
curl http://217.64.206.247:5000
```

### STEP 7: Se tutto funziona
```bash
pm2 save
pm2 startup
```

## URL FINALI
- Locale: http://localhost:5000
- Esterno: http://217.64.206.247:5000
- Health: http://217.64.206.247:5000/health